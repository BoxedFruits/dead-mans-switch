{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\ETH Projects\\\\dead-mans-switch\\\\dead-mans-switch-front-end\\\\src\\\\components\\\\smartContract.jsx\";\nimport React from 'react';\nimport { CopyBlock, dracula } from \"react-code-blocks\";\nimport { Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass contractCode extends React.Component {\n  render() {\n    const code = `\n        // SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"hardhat/console.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract DeadMansContract is Ownable //Need to test functions in diff scenarios\n{\n    string private _decryptionKey;\n    string _url;\n    uint256 nextTimestamp;\n    uint256 private _hourCadence;\n\n    event heartbeat();\n\n    constructor(string memory decryptionKey, uint256 hourCadence) {\n        require(hourCadence < 168); // Owner has to check in atleast once a week\n        _decryptionKey = decryptionKey;\n        _hourCadence = hourCadence;\n        console.log(\"DeadMan created\");\n        console.log(decryptionKey);\n        console.log(block.timestamp);\n        nextTimestamp = block.timestamp + convertHourToUnixEpoch(_hourCadence);\n        console.log(nextTimestamp);\n        console.log(\"---------------\");\n    }\n\n    function isActive() public view onlyOwner returns (bool) {\n        if (block.timestamp <= nextTimestamp) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function tick() public onlyOwner {\n        require(block.timestamp <= nextTimestamp);\n        nextTimestamp += convertHourToUnixEpoch(_hourCadence);\n        emit heartbeat();\n    }\n\n    function getDecryptionKey() public view returns (string memory) { // Owner has failed to check on DMS, reveal key.\n        require(block.timestamp >= nextTimestamp, \"The switch has not been activated yet\");\n        return _decryptionKey;\n    }\n\n\n    function getNextTimeStamp() public view returns (uint256) {\n        return nextTimestamp;\n    }\n\n    function setUrl(string memory url) public onlyOwner {\n        _url = url;\n    }\n\n    function getUrl() public view returns (string memory) {\n        return _url;\n    }\n\n    function defuse() public onlyOwner {\n        _hourCadence = 0;\n        nextTimestamp = 0;\n        _decryptionKey = \"\";\n        renounceOwnership();\n    } // Turn off DMS\n\n    function _renounceOwnership() public onlyOwner {\n        renounceOwnership();\n    }\n\n    function convertHourToUnixEpoch(uint256 h) internal pure returns (uint256) {\n        return h * 3600;\n    }\n}\n`;\n    return /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/code\",\n      children: /*#__PURE__*/_jsxDEV(CopyBlock, {\n        text: code,\n        language: \"javascript\",\n        showLineNumber: \"true\",\n        theme: dracula\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default contractCode;","map":{"version":3,"sources":["C:/Users/samba/Desktop/ETH Projects/dead-mans-switch/dead-mans-switch-front-end/src/components/smartContract.jsx"],"names":["React","CopyBlock","dracula","Route","contractCode","Component","render","code"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,mBAAnC;AACA,SAAQC,KAAR,QAAoB,kBAApB;;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AACvCC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3EQ;AA4EA,wBACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAA,6BACI,QAAC,SAAD;AACI,QAAA,IAAI,EAAEA,IADV;AAEI,QAAA,QAAQ,EAAC,YAFb;AAGI,QAAA,cAAc,EAAC,MAHnB;AAII,QAAA,KAAK,EAAEL;AAJX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAzFsC;;AA4F3C,eAAeE,YAAf","sourcesContent":["import React from 'react';\r\nimport { CopyBlock, dracula } from \"react-code-blocks\";\r\nimport {Route} from \"react-router-dom\";\r\n\r\nclass contractCode extends React.Component {\r\n    render() {\r\n        const code = `\r\n        // SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"hardhat/console.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract DeadMansContract is Ownable //Need to test functions in diff scenarios\r\n{\r\n    string private _decryptionKey;\r\n    string _url;\r\n    uint256 nextTimestamp;\r\n    uint256 private _hourCadence;\r\n\r\n    event heartbeat();\r\n\r\n    constructor(string memory decryptionKey, uint256 hourCadence) {\r\n        require(hourCadence < 168); // Owner has to check in atleast once a week\r\n        _decryptionKey = decryptionKey;\r\n        _hourCadence = hourCadence;\r\n        console.log(\"DeadMan created\");\r\n        console.log(decryptionKey);\r\n        console.log(block.timestamp);\r\n        nextTimestamp = block.timestamp + convertHourToUnixEpoch(_hourCadence);\r\n        console.log(nextTimestamp);\r\n        console.log(\"---------------\");\r\n    }\r\n\r\n    function isActive() public view onlyOwner returns (bool) {\r\n        if (block.timestamp <= nextTimestamp) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function tick() public onlyOwner {\r\n        require(block.timestamp <= nextTimestamp);\r\n        nextTimestamp += convertHourToUnixEpoch(_hourCadence);\r\n        emit heartbeat();\r\n    }\r\n\r\n    function getDecryptionKey() public view returns (string memory) { // Owner has failed to check on DMS, reveal key.\r\n        require(block.timestamp >= nextTimestamp, \"The switch has not been activated yet\");\r\n        return _decryptionKey;\r\n    }\r\n\r\n\r\n    function getNextTimeStamp() public view returns (uint256) {\r\n        return nextTimestamp;\r\n    }\r\n\r\n    function setUrl(string memory url) public onlyOwner {\r\n        _url = url;\r\n    }\r\n\r\n    function getUrl() public view returns (string memory) {\r\n        return _url;\r\n    }\r\n\r\n    function defuse() public onlyOwner {\r\n        _hourCadence = 0;\r\n        nextTimestamp = 0;\r\n        _decryptionKey = \"\";\r\n        renounceOwnership();\r\n    } // Turn off DMS\r\n\r\n    function _renounceOwnership() public onlyOwner {\r\n        renounceOwnership();\r\n    }\r\n\r\n    function convertHourToUnixEpoch(uint256 h) internal pure returns (uint256) {\r\n        return h * 3600;\r\n    }\r\n}\r\n`;\r\n        return (\r\n            <Route path=\"/code\">\r\n                <CopyBlock\r\n                    text={code}\r\n                    language=\"javascript\"\r\n                    showLineNumber=\"true\"\r\n                    theme={dracula}\r\n                >\r\n                </CopyBlock>\r\n            </Route>\r\n        )\r\n    }\r\n}\r\n\r\nexport default contractCode;"]},"metadata":{},"sourceType":"module"}