{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\ETH Projects\\\\dead-mans-switch\\\\dead-mans-switch-front-end\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport DeadMansContract from './utils/DeadMansContract.abi.json';\nimport { ethers, ContractFactory } from \"ethers\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        alert(\"This app only works with MetaMask for now!\");\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const createContract = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const decryptionKey = document.getElementById(\"decryptionKey\").value;\n        const cadence = document.getElementById(\"cadence\").value;\n        const factory = new ContractFactory(DeadMansContract.abi, DeadMansContract.bytecode);\n        const contract = await factory.deploy(decryptionKey, cadence);\n        await contract.deployTransaction.wait(); // console.log(contract.address);\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(\"eerroring\");\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!currentAccount ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"waveButton\",\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Currently connected as: \", currentAccount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What is a Dead Man's Switch?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Why is the blockchain perfect for this?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How this works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"decryptionKey\",\n        placeholder: \"Decryption Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"cadence\",\n        placeholder: \"When to check in hours\",\n        max: \"168\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createContract,\n        children: \"Create Dead Man's Switch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hO+PRUreH9DSyy9FjpWYmXii118=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/ETH Projects/dead-mans-switch/dead-mans-switch-front-end/src/App.js"],"names":["DeadMansContract","ethers","ContractFactory","useState","App","currentAccount","setCurrentAccount","connectWallet","ethereum","window","alert","accounts","request","method","console","log","error","createContract","provider","providers","Web3Provider","signer","getSigner","decryptionKey","document","getElementById","value","cadence","factory","abi","bytecode","contract","deploy","deployTransaction","wait"],"mappings":"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","sourcesContent":["import './App.css';\nimport DeadMansContract from './utils/DeadMansContract.abi.json';\nimport { ethers, ContractFactory } from \"ethers\";\nimport { useState } from 'react';\n\nfunction App() {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\nconst connectWallet = async() => {\n  try {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      alert(\"This app only works with MetaMask for now!\");\n      return;\n    }\n\n    const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n\n    console.log(\"Connected\", accounts[0]);\n    setCurrentAccount(accounts[0]);\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nconst createContract = async() => {\n  try {\n    const { ethereum } = window;\n  if (ethereum) {\n  const provider = new ethers.providers.Web3Provider(ethereum)\n  const signer = provider.getSigner();\n  const decryptionKey = document.getElementById(\"decryptionKey\").value;\n  const cadence = document.getElementById(\"cadence\").value;\n\n  const factory = new ContractFactory(DeadMansContract.abi, DeadMansContract.bytecode);\n\n  const contract = await factory.deploy(decryptionKey, cadence);\n  \n  await contract.deployTransaction.wait();\n\n  // console.log(contract.address);\n} else {\n  console.log(\"Ethereum object doesn't exist!\")\n}\n} catch (error) {\nconsole.log(\"eerroring\")\nconsole.log(error);\n}\n}\n\n  return (\n    <div>\n      {!currentAccount ? (\n        <button className=\"waveButton\" onClick={connectWallet}>\n          Connect Wallet\n        </button>\n      ) : <h1>Currently connected as: {currentAccount}</h1>\n      }\n\n      <h1>What is a Dead Man's Switch?</h1>\n      <h1>Why is the blockchain perfect for this?</h1>\n      <h1>How this works</h1>\n\n      <div>\n        <input id=\"decryptionKey\" placeholder=\"Decryption Key\"></input>\n        <input id=\"cadence\" placeholder=\"When to check in hours\" max=\"168\"></input>\n        <button onClick={createContract}>Create Dead Man's Switch</button>\n      </div>\n\n      {/* <form>\n        <input placeholder=\"Address of contract\"></input>\n        <button onClick=\"getContract\">{}</button>\n      </form> */}\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}