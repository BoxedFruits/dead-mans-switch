{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\ETH Projects\\\\dead-mans-switch\\\\dead-mans-switch-front-end\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport contractABI from './utils/DeadMansContract.abi.json';\nimport { ethers } from \"ethers\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(\"\"); // const checkIfWalletIsConnected = async () => {\n  //   try {\n  //     const { ethereum } = window;\n  //     if (!ethereum) {\n  //       console.log(\"Make sure you have metamask!\");\n  //       return;\n  //     } else {\n  //       console.log(\"We have the ethereum object\", ethereum);\n  //     }\n  //     const accounts = await ethereum.request({ method: 'eth_accounts' });\n  //     if (accounts.length !== 0) {\n  //       const account = accounts[0];\n  //       console.log(\"Found an authorized account:\", account);\n  //       setCurrentAccount(account);\n  //     } else {\n  //       console.log(\"No authorized account found\")\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        alert(\"This app only works with MetaMask for now!\"); // This onyl works for metamask\n\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !currentAccount && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"waveButton\",\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hO+PRUreH9DSyy9FjpWYmXii118=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/ETH Projects/dead-mans-switch/dead-mans-switch-front-end/src/App.js"],"names":["contractABI","ethers","useState","App","currentAccount","setCurrentAccount","connectWallet","ethereum","window","alert","accounts","request","method","console","log","error"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,WAAP,MAAwB,mCAAxB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCH,QAAQ,CAAC,EAAD,CAApD,CADa,CAGf;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMI,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAeC,MAArB;;AAEA,UAAI,CAACD,QAAL,EAAe;AACbE,QAAAA,KAAK,CAAC,4CAAD,CAAL,CADa,CACwC;;AACrD;AACD;;AAED,YAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjB,CAAvB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,QAAQ,CAAC,CAAD,CAAjC;AACAL,MAAAA,iBAAiB,CAACK,QAAQ,CAAC,CAAD,CAAT,CAAjB;AACD,KAZD,CAYE,OAAOK,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,GAhBD;;AAmBE,sBACE;AAAA,cACG,CAACX,cAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAEE,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAxDQH,G;;KAAAA,G;AA0DT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport contractABI from './utils/DeadMansContract.abi.json';\nimport { ethers } from \"ethers\";\nimport { useState } from 'react';\n\nfunction App() {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\n// const checkIfWalletIsConnected = async () => {\n//   try {\n//     const { ethereum } = window;\n\n//     if (!ethereum) {\n//       console.log(\"Make sure you have metamask!\");\n//       return;\n//     } else {\n//       console.log(\"We have the ethereum object\", ethereum);\n//     }\n\n//     const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n//     if (accounts.length !== 0) {\n//       const account = accounts[0];\n//       console.log(\"Found an authorized account:\", account);\n//       setCurrentAccount(account);\n//     } else {\n//       console.log(\"No authorized account found\")\n//     }\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\nconst connectWallet = async () => {\n  try {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      alert(\"This app only works with MetaMask for now!\"); // This onyl works for metamask\n      return;\n    }\n\n    const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n\n    console.log(\"Connected\", accounts[0]);\n    setCurrentAccount(accounts[0]);\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n\n  return (\n    <div>\n      {!currentAccount && (\n        <button className=\"waveButton\" onClick={connectWallet}>\n          Connect Wallet\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}