{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\ETH Projects\\\\dead-mans-switch\\\\dead-mans-switch-front-end\\\\src\\\\components\\\\contractInteraction.jsx\";\nimport { Button, Space } from 'antd';\nimport React, { useState } from 'react';\nimport DeadMansContract from '../utils/DeadMansContract.abi.json';\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContractInteraction extends React.Component {\n  constructor() {\n    super();\n\n    this.initContract = () => {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(this.props.address, DeadMansContract.abi, signer);\n      return contract;\n    };\n\n    this.isActive = async () => {\n      const tx = this.initContract().isActive();\n      this.setState(state => {\n        state.pendingTx = true;\n      });\n      console.log(state.pendingTx);\n      await tx.wait().then(() => {\n        this.setState(state => {\n          state.pendingTx = false;\n        });\n        console.log(tx);\n      });\n    };\n\n    this.tick = async () => {\n      const tx = await this.initContract().tick(); // Give user feedback that this was succesful\n    };\n\n    this.getDecryptionKey = async () => {\n      const tx = await this.initContract().getDecryptionKey(); // Will error if  block timestamp < nextTimestamp\n    };\n\n    this.setUrl = async newUrl => {\n      const tx = await this.initContract().setUrl(newUrl); // give user feedback\n    };\n\n    this.getUrl = async () => {\n      const tx = await this.initContract().getUrl();\n    };\n\n    this.defuse = async () => {\n      const tx = await this.initContract().defuse(); // Show gif?\n    };\n\n    this.renounceOwnership = async () => {\n      // Pop warning before allowing this to happpen\n      const tx = await this.initContract().renounceOwnership();\n    };\n\n    this.state = {\n      pendingTx: false,\n      showIsActiveText: false,\n      showTickText: false,\n      showRenounceText: false,\n      showGetDecryptionText: false,\n      showDefuseText: false,\n      showGetUrlText: false,\n      showSetUrlText: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Contract Address: \", this.props.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        direction: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.isActive,\n          children: \"Check Heartbeat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), this.state.showIsActiveText && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The switch is \", this.state.active ? \"not\" : \"still\", \" active\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.tick,\n          children: \"Add Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.defuse,\n          children: \"Defuse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.renounceOwnership,\n          children: \"Renounce Ownership\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.getUrl,\n          children: \"Get URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.setUrl,\n          children: \"Set Url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.getDecryptionKey,\n          children: \"Reveal Decryption Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContractInteraction;","map":{"version":3,"sources":["C:/Users/samba/Desktop/ETH Projects/dead-mans-switch/dead-mans-switch-front-end/src/components/contractInteraction.jsx"],"names":["Button","Space","React","useState","DeadMansContract","ethers","ContractInteraction","Component","constructor","initContract","provider","providers","Web3Provider","ethereum","signer","getSigner","contract","Contract","props","address","abi","isActive","tx","setState","state","pendingTx","console","log","wait","then","tick","getDecryptionKey","setUrl","newUrl","getUrl","defuse","renounceOwnership","showIsActiveText","showTickText","showRenounceText","showGetDecryptionText","showDefuseText","showGetUrlText","showSetUrlText","render","active"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,MAA9B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,mBAAN,SAAkCJ,KAAK,CAACK,SAAxC,CAAkD;AAE9CC,EAAAA,WAAW,GAAG;AACV;;AADU,SAcdC,YAdc,GAcC,MAAM;AACjB,YAAMC,QAAQ,GAAG,IAAIL,MAAM,CAACM,SAAP,CAAiBC,YAArB,CAAkCC,QAAlC,CAAjB;AACA,YAAMC,MAAM,GAAGJ,QAAQ,CAACK,SAAT,EAAf;AACA,YAAMC,QAAQ,GAAG,IAAIX,MAAM,CAACY,QAAX,CAAoB,KAAKC,KAAL,CAAWC,OAA/B,EAAwCf,gBAAgB,CAACgB,GAAzD,EAA8DN,MAA9D,CAAjB;AACA,aAAOE,QAAP;AACH,KAnBa;;AAAA,SAqBdK,QArBc,GAqBH,YAAY;AACnB,YAAMC,EAAE,GAAG,KAAKb,YAAL,GAAoBY,QAApB,EAAX;AAEA,WAAKE,QAAL,CAAeC,KAAD,IAAW;AACrBA,QAAAA,KAAK,CAACC,SAAN,GAAkB,IAAlB;AACH,OAFD;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,SAAlB;AACA,YAAMH,EAAE,CAACM,IAAH,GAAUC,IAAV,CAAe,MAAM;AACvB,aAAKN,QAAL,CAAeC,KAAD,IAAW;AACrBA,UAAAA,KAAK,CAACC,SAAN,GAAkB,KAAlB;AACH,SAFD;AAGAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ;AACH,OALK,CAAN;AAOH,KAnCa;;AAAA,SAqCdQ,IArCc,GAqCP,YAAY;AACf,YAAMR,EAAE,GAAG,MAAM,KAAKb,YAAL,GAAoBqB,IAApB,EAAjB,CADe,CAEf;AACH,KAxCa;;AAAA,SA0CdC,gBA1Cc,GA0CK,YAAY;AAC3B,YAAMT,EAAE,GAAG,MAAM,KAAKb,YAAL,GAAoBsB,gBAApB,EAAjB,CAD2B,CAE3B;AACH,KA7Ca;;AAAA,SA+CdC,MA/Cc,GA+CL,MAAOC,MAAP,IAAkB;AACvB,YAAMX,EAAE,GAAG,MAAM,KAAKb,YAAL,GAAoBuB,MAApB,CAA2BC,MAA3B,CAAjB,CADuB,CAEvB;AACH,KAlDa;;AAAA,SAoDdC,MApDc,GAoDL,YAAY;AACjB,YAAMZ,EAAE,GAAG,MAAM,KAAKb,YAAL,GAAoByB,MAApB,EAAjB;AACH,KAtDa;;AAAA,SAwDdC,MAxDc,GAwDL,YAAY;AACjB,YAAMb,EAAE,GAAG,MAAM,KAAKb,YAAL,GAAoB0B,MAApB,EAAjB,CADiB,CAEjB;AACH,KA3Da;;AAAA,SA6DdC,iBA7Dc,GA6DM,YAAY;AAC5B;AACA,YAAMd,EAAE,GAAG,MAAM,KAAKb,YAAL,GAAoB2B,iBAApB,EAAjB;AACH,KAhEa;;AAEV,SAAKZ,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAG,KADH;AAETY,MAAAA,gBAAgB,EAAG,KAFV;AAGTC,MAAAA,YAAY,EAAG,KAHN;AAITC,MAAAA,gBAAgB,EAAG,KAJV;AAKTC,MAAAA,qBAAqB,EAAG,KALf;AAMTC,MAAAA,cAAc,EAAG,KANR;AAOTC,MAAAA,cAAc,EAAG,KAPR;AAQTC,MAAAA,cAAc,EAAG;AARR,KAAb;AAUH;;AAsDDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BAEI;AAAA,yCAAwB,KAAK1B,KAAL,CAAWC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,UAAjB;AAAA,gCAGI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKE,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAIK,KAAKG,KAAL,CAAWa,gBAAX,iBAA+B;AAAA,uCAAkB,KAAKb,KAAL,CAAWqB,MAAX,GAAoB,KAApB,GAA4B,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJpC,eAKI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKf,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKK,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKF,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eAUI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKF,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKD,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;;AAxF6C;;AA2FlD,eAAezB,mBAAf","sourcesContent":["import { Button, Space } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport DeadMansContract from '../utils/DeadMansContract.abi.json';\r\nimport { ethers } from \"ethers\";\r\n\r\nclass ContractInteraction extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pendingTx : false,\r\n            showIsActiveText : false,\r\n            showTickText : false,\r\n            showRenounceText : false,\r\n            showGetDecryptionText : false,\r\n            showDefuseText : false,\r\n            showGetUrlText : false,\r\n            showSetUrlText : false\r\n        };\r\n    }\r\n\r\n    initContract = () => {\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        const signer = provider.getSigner();\r\n        const contract = new ethers.Contract(this.props.address, DeadMansContract.abi, signer);\r\n        return contract;\r\n    }\r\n\r\n    isActive = async () => {\r\n        const tx = this.initContract().isActive();\r\n\r\n        this.setState((state) => {\r\n            state.pendingTx = true;\r\n        });\r\n        console.log(state.pendingTx)\r\n        await tx.wait().then(() => {\r\n            this.setState((state) => {\r\n                state.pendingTx = false;\r\n            });\r\n            console.log(tx);\r\n        });\r\n\r\n    };\r\n\r\n    tick = async () => {\r\n        const tx = await this.initContract().tick();\r\n        // Give user feedback that this was succesful\r\n    };\r\n\r\n    getDecryptionKey = async () => {\r\n        const tx = await this.initContract().getDecryptionKey();\r\n        // Will error if  block timestamp < nextTimestamp\r\n    };\r\n\r\n    setUrl = async (newUrl) => {\r\n        const tx = await this.initContract().setUrl(newUrl);\r\n        // give user feedback\r\n    };\r\n\r\n    getUrl = async () => {\r\n        const tx = await this.initContract().getUrl();\r\n    };\r\n\r\n    defuse = async () => {\r\n        const tx = await this.initContract().defuse();\r\n        // Show gif?\r\n    };\r\n\r\n    renounceOwnership = async () => {\r\n        // Pop warning before allowing this to happpen\r\n        const tx = await this.initContract().renounceOwnership();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* Give more emphasis to this */}\r\n                <div>Contract Address: {this.props.address}</div>\r\n                <Space direction=\"vertical\">\r\n                    {/* None of the methods have inputs so they can just be buttons */}\r\n                    {/* Add icons to make them more interesting */}\r\n                    <Button onClick={this.isActive}>Check Heartbeat</Button>\r\n                    {this.state.showIsActiveText && <p>The switch is {this.state.active ? \"not\" : \"still\"} active</p>}\r\n                    <Button onClick={this.tick}>Add Time</Button>\r\n                    <Button onClick={this.defuse}>Defuse</Button>\r\n                    <Button onClick={this.renounceOwnership}>Renounce Ownership</Button>\r\n                    <Button onClick={this.getUrl}>Get URL</Button>\r\n                    {/* Get input */}\r\n                    <Button onClick={this.setUrl}>Set Url</Button>\r\n                    <Button onClick={this.getDecryptionKey}>Reveal Decryption Key</Button>\r\n                </Space>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default ContractInteraction;"]},"metadata":{},"sourceType":"module"}