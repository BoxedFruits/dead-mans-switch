{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\ETH Projects\\\\dead-mans-switch\\\\dead-mans-switch-front-end\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport contractABI from './utils/DeadMansContract.abi.json';\nimport { ethers } from \"ethers\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst checkIfWalletIsConnected = async () => {\n  try {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst connectWallet = async () => {\n  try {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      alert(\"Get MetaMask!\"); // This onyl works for metamask\n\n      return;\n    }\n\n    const accounts = await ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    console.log(\"Connected\", accounts[0]);\n    setCurrentAccount(accounts[0]);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nfunction App() {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), !currentAccount && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"waveButton\",\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hO+PRUreH9DSyy9FjpWYmXii118=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/ETH Projects/dead-mans-switch/dead-mans-switch-front-end/src/App.js"],"names":["contractABI","ethers","useState","checkIfWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","setCurrentAccount","error","connectWallet","alert","App","currentAccount","logo"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,WAAP,MAAwB,mCAAxB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,wBAAwB,GAAG,YAAY;AAC3C,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAeC,MAArB;;AAEA,QAAI,CAACD,QAAL,EAAe;AACbE,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA;AACD,KAHD,MAGO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CH,QAA3C;AACD;;AAED,UAAMI,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,OAAT,CAAiB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjB,CAAvB;;AAEA,QAAIF,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;AACzB,YAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CK,OAA5C;AACAC,MAAAA,iBAAiB,CAACD,OAAD,CAAjB;AACD,KAJD,MAIO;AACLN,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF,GAnBD,CAmBE,OAAOO,KAAP,EAAc;AACdR,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD;AACF,CAvBD;;AAyBA,MAAMC,aAAa,GAAG,YAAY;AAChC,MAAI;AACF,UAAM;AAAEX,MAAAA;AAAF,QAAeC,MAArB;;AAEA,QAAI,CAACD,QAAL,EAAe;AACbY,MAAAA,KAAK,CAAC,eAAD,CAAL,CADa,CACW;;AACxB;AACD;;AAED,UAAMR,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,OAAT,CAAiB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjB,CAAvB;AAEAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,QAAQ,CAAC,CAAD,CAAjC;AACAK,IAAAA,iBAAiB,CAACL,QAAQ,CAAC,CAAD,CAAT,CAAjB;AACD,GAZD,CAYE,OAAOM,KAAP,EAAc;AACdR,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD;AACF,CAhBD;;AAkBA,SAASG,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBL,iBAAjB,IAAsCX,QAAQ,CAAC,EAAD,CAApD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEiB,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAeG,CAACD,cAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAEH,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA1BQE,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport contractABI from './utils/DeadMansContract.abi.json';\nimport { ethers } from \"ethers\";\nimport { useState } from 'react';\n\nconst checkIfWalletIsConnected = async () => {\n  try {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\")\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst connectWallet = async () => {\n  try {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      alert(\"Get MetaMask!\"); // This onyl works for metamask\n      return;\n    }\n\n    const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n\n    console.log(\"Connected\", accounts[0]);\n    setCurrentAccount(accounts[0]);\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nfunction App() {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      {!currentAccount && (\n        <button className=\"waveButton\" onClick={connectWallet}>\n          Connect Wallet\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}