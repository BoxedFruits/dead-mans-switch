{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\ETH Projects\\\\dead-mans-switch\\\\dead-mans-switch-front-end\\\\src\\\\components\\\\contractInteraction.jsx\";\nimport { Button, Space, Input, Spin } from 'antd';\nimport React from 'react';\nimport DeadMansContract from '../utils/DeadMansContract.abi.json';\nimport { ethers } from \"ethers\";\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst antIcon = /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n  style: {\n    fontSize: 92,\n    width: 100\n  },\n  spin: true\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 17\n}, this);\n\nclass ContractInteraction extends React.Component {\n  constructor() {\n    super();\n\n    this.initContract = () => {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(this.props.address, DeadMansContract.abi, signer);\n      return contract;\n    };\n\n    this.isActive = async () => {\n      const tx = this.initContract().isActive();\n      this.setState({\n        pendingTx: true\n      });\n      await tx.then(res => {\n        this.setState({\n          pendingTx: false,\n          showIsActiveText: true,\n          active: res\n        });\n      });\n    };\n\n    this.tick = async () => {\n      const tx = await this.initContract().tick();\n      this.setState({\n        pendingTx: true\n      });\n      await tx.then(() => {\n        this.setState({\n          pendingTx: false\n        });\n      });\n    };\n\n    this.getNextTimeStamp = async () => {\n      const tx = await this.initContract().getNextTimeStamp();\n      this.setState({\n        pendingTx: true\n      });\n      await tx.then(res => {\n        this.setState({\n          pendingTx: false,\n          showNextTimeStamp: true,\n          nextTimeStamp: res\n        });\n      });\n    };\n\n    this.setUrl = async () => {\n      const newUrl = document.getElementById(\"setUrl\").value;\n      const tx = this.initContract().setUrl(newUrl);\n      this.setState({\n        pendingTx: true\n      });\n      console.log(\"pending\");\n      console.log(tx);\n      await tx.wait().then(() => {\n        console.log(\"here\");\n        this.setState({\n          pendingTx: false\n        });\n      });\n      console.log(\"end\");\n    };\n\n    this.getUrl = async () => {\n      const tx = this.initContract().getUrl();\n      this.setState({\n        pendingTx: true\n      });\n      await tx.then(res => {\n        this.setState({\n          pendingTx: false,\n          showGetUrlText: true,\n          url: res\n        });\n      });\n    };\n\n    this.getDecryptionKey = async () => {\n      const tx = await this.initContract().getDecryptionKey(); // Will error if  block timestamp < nextTimestamp ***\n    };\n\n    this.defuse = async () => {\n      // Show warning modal\n      const tx = await this.initContract().defuse();\n    };\n\n    this.renounceOwnership = async () => {\n      // Pop warning modal before allowing this to happpen\n      const tx = await this.initContract().renounceOwnership();\n    };\n\n    this.state = {\n      active: false,\n      url: \"\",\n      decryptionKey: \"\",\n      nextTimeStamp: \"\",\n      pendingTx: false,\n      showIsActiveText: false,\n      showTickText: false,\n      showRenounceText: false,\n      showGetDecryptionText: false,\n      showDefuseText: false,\n      showGetUrlText: false,\n      showSetUrlText: false,\n      showNextTimeStamp: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Contract Address: \", this.props.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), this.state.pendingTx ? /*#__PURE__*/_jsxDEV(Spin, {\n        indicator: antIcon,\n        style: {\n          width: \"100%\",\n          marginTop: \"4rem\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(Space, {\n        direction: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.isActive,\n          children: \"Check Heartbeat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), this.state.showIsActiveText && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The switch is \", this.state.active ? \"still \" : \"not \", \" being monitored.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 57\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.tick,\n          children: \"Add Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.getNextTimeStamp,\n          children: \"Get Next Time Stamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), this.state.showNextTimeStamp && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.nextTimeStamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 58\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.defuse,\n          children: \"Defuse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.renounceOwnership,\n          children: \"Renounce Ownership\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.getUrl,\n          children: \"Get URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), this.state.showGetUrlText && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.url === \"\" ? \"There was no URL set\" : this.state.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.setUrl,\n          children: \"Set Url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          size: \"large\",\n          id: \"setUrl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.getDecryptionKey,\n          children: \"Reveal Decryption Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), this.state.showGetDecryptionText && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.decryptionKey === \"\" ? \"\" : this.state.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContractInteraction;","map":{"version":3,"sources":["C:/Users/samba/Desktop/ETH Projects/dead-mans-switch/dead-mans-switch-front-end/src/components/contractInteraction.jsx"],"names":["Button","Space","Input","Spin","React","DeadMansContract","ethers","LoadingOutlined","antIcon","fontSize","width","ContractInteraction","Component","constructor","initContract","provider","providers","Web3Provider","ethereum","signer","getSigner","contract","Contract","props","address","abi","isActive","tx","setState","pendingTx","then","res","showIsActiveText","active","tick","getNextTimeStamp","showNextTimeStamp","nextTimeStamp","setUrl","newUrl","document","getElementById","value","console","log","wait","getUrl","showGetUrlText","url","getDecryptionKey","defuse","renounceOwnership","state","decryptionKey","showTickText","showRenounceText","showGetDecryptionText","showDefuseText","showSetUrlText","render","marginTop"],"mappings":"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","sourcesContent":["import { Button, Space, Input, Spin } from 'antd';\r\nimport React from 'react';\r\nimport DeadMansContract from '../utils/DeadMansContract.abi.json';\r\nimport { ethers } from \"ethers\";\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst antIcon = <LoadingOutlined style={{ fontSize: 92, width: 100 }} spin />;\r\n\r\nclass ContractInteraction extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            active: false,\r\n            url: \"\",\r\n            decryptionKey: \"\",\r\n            nextTimeStamp: \"\",\r\n            pendingTx: false,\r\n            showIsActiveText: false,\r\n            showTickText: false,\r\n            showRenounceText: false,\r\n            showGetDecryptionText: false,\r\n            showDefuseText: false,\r\n            showGetUrlText: false,\r\n            showSetUrlText: false,\r\n            showNextTimeStamp: false\r\n        };\r\n    }\r\n\r\n    initContract = () => {\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        const signer = provider.getSigner();\r\n        const contract = new ethers.Contract(this.props.address, DeadMansContract.abi, signer);\r\n        return contract;\r\n    }\r\n\r\n    isActive = async () => {\r\n        const tx = this.initContract().isActive();\r\n\r\n        this.setState({ pendingTx: true });\r\n\r\n        await tx.then((res) => {\r\n            this.setState({ pendingTx: false, showIsActiveText: true, active: res });\r\n        });\r\n\r\n    };\r\n\r\n    tick = async () => {\r\n        const tx = await this.initContract().tick();\r\n\r\n        this.setState({ pendingTx: true });\r\n\r\n        await tx.then(() => {\r\n            this.setState({ pendingTx: false });\r\n        });\r\n    };\r\n\r\n    getNextTimeStamp = async () => {\r\n        const tx = await this.initContract().getNextTimeStamp();\r\n\r\n        this.setState({ pendingTx: true });\r\n\r\n        await tx.then((res) => {\r\n            this.setState({ pendingTx: false, showNextTimeStamp: true, nextTimeStamp: res });\r\n        });\r\n    }\r\n\r\n    setUrl = async () => {\r\n        const newUrl = document.getElementById(\"setUrl\").value;\r\n        const tx = this.initContract().setUrl(newUrl);\r\n\r\n        this.setState({ pendingTx: true });\r\n        console.log(\"pending\")\r\n        console.log(tx)\r\n        await tx.wait().then(() => {\r\n            console.log(\"here\")\r\n            this.setState({ pendingTx: false });\r\n        });\r\n        console.log(\"end\")\r\n    };\r\n\r\n    getUrl = async () => {\r\n        const tx = this.initContract().getUrl();\r\n\r\n        this.setState({ pendingTx: true });\r\n\r\n        await tx.then((res) => {\r\n            this.setState({ pendingTx: false, showGetUrlText: true, url: res });\r\n        });\r\n    };\r\n\r\n    getDecryptionKey = async () => {\r\n        const tx = await this.initContract().getDecryptionKey();\r\n        // Will error if  block timestamp < nextTimestamp ***\r\n    };\r\n\r\n    defuse = async () => {\r\n        // Show warning modal\r\n        const tx = await this.initContract().defuse();\r\n    };\r\n\r\n    renounceOwnership = async () => {\r\n        // Pop warning modal before allowing this to happpen\r\n        const tx = await this.initContract().renounceOwnership();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* Give more emphasis to this */}\r\n                <div>Contract Address: {this.props.address}</div>\r\n                {this.state.pendingTx ? <Spin indicator={antIcon} style={{ width: \"100%\", marginTop: \"4rem\" }} /> : (\r\n                    <Space direction=\"vertical\">\r\n                        <Button onClick={this.isActive}>Check Heartbeat</Button>\r\n                        {this.state.showIsActiveText && <p>The switch is {this.state.active ? \"still \" : \"not \"} being monitored.</p>}\r\n                        <Button onClick={this.tick}>Add Time</Button>\r\n                        <Button onClick={this.getNextTimeStamp}>Get Next Time Stamp</Button>\r\n                        {this.state.showNextTimeStamp && <p>{this.nextTimeStamp}</p>}\r\n                        <Button onClick={this.defuse}>Defuse</Button>\r\n                        <Button onClick={this.renounceOwnership}>Renounce Ownership</Button>\r\n                        <Button onClick={this.getUrl}>Get URL</Button>\r\n                        {this.state.showGetUrlText && <p>{this.state.url === \"\" ? \"There was no URL set\" : this.state.url}</p>}\r\n                        <Button onClick={this.setUrl}>Set Url</Button>\r\n                        <Input size=\"large\" id=\"setUrl\" />\r\n                        <Button onClick={this.getDecryptionKey}>Reveal Decryption Key</Button>\r\n                        {this.state.showGetDecryptionText && <p>{this.state.decryptionKey === \"\" ? \"\" : this.state.url}</p>}\r\n                    </Space>\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default ContractInteraction;"]},"metadata":{},"sourceType":"module"}