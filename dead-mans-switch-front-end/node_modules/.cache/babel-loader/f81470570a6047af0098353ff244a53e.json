{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\ETH Projects\\\\dead-mans-switch\\\\dead-mans-switch-front-end\\\\src\\\\components\\\\contractInteraction.jsx\";\nimport { Modal, Button, Space, Input, Spin, Typography } from 'antd';\nimport React from 'react';\nimport DeadMansContract from '../utils/DeadMansContract.abi.json';\nimport { ethers } from \"ethers\";\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst antIcon = /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n  style: {\n    fontSize: 92,\n    width: 100\n  },\n  spin: true\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 17\n}, this);\n\nconst {\n  Paragraph\n} = Typography;\n\nclass ContractInteraction extends React.Component {\n  constructor() {\n    super();\n\n    this.initContract = () => {\n      if (this.state.contract == undefined) {\n        setTimeout(() => {\n          const provider = new ethers.providers.Web3Provider(ethereum);\n          const signer = provider.getSigner();\n          const contract = new ethers.Contract(this.props.address, DeadMansContract.abi, signer);\n          this.setState({\n            contract: contract\n          });\n          console.log(this.state.contract);\n          return contract;\n        });\n      } else {\n        console.log(this.state.contract);\n        return this.state.contract;\n      }\n    };\n\n    this.isActive = async () => {\n      try {\n        const tx = await this.initContract().isActive();\n        this.setState({\n          pendingTx: false,\n          active: tx\n        });\n      } catch (e) {\n        setTimeout(() => {\n          this.isActive();\n        }, 100);\n      }\n    };\n\n    this.tick = async () => {\n      try {\n        const tx = await this.initContract().tick();\n        this.setState({\n          pendingTx: true\n        });\n        await tx.wait();\n        this.setState({\n          pendingTx: false\n        });\n        this.getNextTimeStamp();\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.getNextTimeStamp = async () => {\n      try {\n        const tx = await this.initContract().getNextTimeStamp();\n        this.setState({\n          pendingTx: false,\n          nextTimeStamp: Date(parseInt(BigInt(tx))).toString()\n        });\n      } catch (e) {}\n    };\n\n    this.setUrl = async () => {\n      try {\n        const newUrl = document.getElementById(\"setUrl\").value;\n        const tx = await this.initContract().setUrl(newUrl);\n        this.setState({\n          pendingTx: true\n        });\n        await tx.wait();\n        this.setState({\n          pendingTx: false\n        }); // this.getUrl();\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.getUrl = async () => {\n      try {\n        const tx = await this.initContract().getUrl();\n        this.setState({\n          pendingTx: true\n        });\n        this.setState({\n          pendingTx: false,\n          url: tx\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.getDecryptionKey = async () => {\n      try {\n        const tx = await this.initContract().getDecryptionKey();\n        await tx.wait();\n        this.setState({\n          showDecryptionKeyText: true,\n          decryptionKey: tx\n        });\n      } catch (e) {\n        this.setState({\n          showDecryptionKeyText: true,\n          decryptionKey: \"The switch has not been activated yet\"\n        });\n      }\n    };\n\n    this.renounceOwnershipModal = () => {\n      this.setState({\n        isModalRenounceVisible: true\n      });\n    };\n\n    this.renounceOwnership = async () => {\n      const tx = await this.initContract().renounceOwnership();\n      await tx.wait();\n      this.handleRenounceCancel();\n    };\n\n    this.handleRenounceCancel = () => {\n      this.setState({\n        isModalRenounceVisible: false\n      });\n    };\n\n    this.defuse = async () => {\n      const tx = await this.initContract().defuse();\n      await tx.wait();\n      this.handleDefuseCancel();\n    };\n\n    this.defuseModal = () => {\n      this.setState({\n        isModalDefuseVisible: true\n      });\n    };\n\n    this.handleDefuseCancel = () => {\n      this.setState({\n        isModalDefuseVisible: false\n      });\n    };\n\n    this.state = {\n      active: false,\n      url: \"\",\n      decryptionKey: \"\",\n      nextTimeStamp: \"\",\n      pendingTx: false,\n      showTickText: false,\n      showGetDecryptionText: false,\n      isModalRenounceVisible: false,\n      isModalDefuseVisible: false\n    };\n  }\n\n  componentDidMount() {\n    try {\n      this.isActive();\n      this.getUrl();\n      this.getNextTimeStamp();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    // Add error message if user denies transactions\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n        children: [\"Contract Address: \", this.props.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), this.state.pendingTx ? /*#__PURE__*/_jsxDEV(Spin, {\n        indicator: antIcon,\n        style: {\n          width: \"100%\",\n          marginTop: \"4rem\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(Space, {\n        direction: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n          children: [\"The switch is \", this.state.active === true ? \"still \" : \"not \", \" being monitored.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n          children: [\"Next timestamp: \", this.state.nextTimeStamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n          children: [\"Url to file: \", this.state.url === \"\" ? \"There was no URL set or was left blank\" : this.state.url]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.tick,\n          children: \"Add Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.defuse,\n          children: \"Defuse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.renounceOwnershipModal,\n          children: \"Renounce Ownership\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.setUrl,\n          children: \"Set Url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          size: \"large\",\n          id: \"setUrl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.getDecryptionKey,\n          children: \"Reveal Decryption Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), this.state.showDecryptionKeyText && /*#__PURE__*/_jsxDEV(Paragraph, {\n          children: this.state.decryptionKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        id: \"renounce\",\n        title: \"Are you sure?\",\n        visible: this.state.isModalRenounceVisible,\n        footer: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleRenounceCancel,\n          children: \"Cancel\"\n        }, \"back\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.renounceOwnership,\n          children: \"Renounce Ownership\"\n        }, \"submit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this)],\n        children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n          children: \"Renouncing the ownership of the Dead Man's Switch means that if not defused, there is no stopping the switch from activating.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n          children: \"This action is is irreversible.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        id: \"defuse\",\n        title: \"Are you sure?\",\n        visible: this.state.isModalDefuseVisible,\n        footer: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.defuse,\n          children: \"Cancel\"\n        }, \"back\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleDefuseCancel,\n          children: \"Defuse\"\n        }, \"submit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this)],\n        children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n          children: \"Defusing the Dead Man's Switch means that the danger has passed and the use of the switch is no longer needed. The decryption key will not be revealed and you will no longer need to check on the switch.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n          children: \"This action is is irreversible.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  }\n\n} // 0) Refactor this page a little with those buttons\n// ) Check on deployed Contract functionality\n// 1) Dark screen mode\n// 2) Add routing to show the contract on a different page\n// 3) Host on IPFS\n\n\nexport default ContractInteraction;","map":{"version":3,"sources":["C:/Users/samba/Desktop/ETH Projects/dead-mans-switch/dead-mans-switch-front-end/src/components/contractInteraction.jsx"],"names":["Modal","Button","Space","Input","Spin","Typography","React","DeadMansContract","ethers","LoadingOutlined","antIcon","fontSize","width","Paragraph","ContractInteraction","Component","constructor","initContract","state","contract","undefined","setTimeout","provider","providers","Web3Provider","ethereum","signer","getSigner","Contract","props","address","abi","setState","console","log","isActive","tx","pendingTx","active","e","tick","wait","getNextTimeStamp","nextTimeStamp","Date","parseInt","BigInt","toString","setUrl","newUrl","document","getElementById","value","getUrl","url","getDecryptionKey","showDecryptionKeyText","decryptionKey","renounceOwnershipModal","isModalRenounceVisible","renounceOwnership","handleRenounceCancel","defuse","handleDefuseCancel","defuseModal","isModalDefuseVisible","showTickText","showGetDecryptionText","componentDidMount","render","marginTop"],"mappings":"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","sourcesContent":["import { Modal, Button, Space, Input, Spin, Typography } from 'antd';\r\nimport React from 'react';\r\nimport DeadMansContract from '../utils/DeadMansContract.abi.json';\r\nimport { ethers } from \"ethers\";\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst antIcon = <LoadingOutlined style={{ fontSize: 92, width: 100 }} spin />;\r\nconst { Paragraph } = Typography;\r\n\r\nclass ContractInteraction extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            active: false,\r\n            url: \"\",\r\n            decryptionKey: \"\",\r\n            nextTimeStamp: \"\",\r\n            pendingTx: false,\r\n            showTickText: false,\r\n            showGetDecryptionText: false,\r\n            isModalRenounceVisible: false,\r\n            isModalDefuseVisible: false\r\n        };\r\n    }\r\n\r\n    initContract = () => {\r\n        if (this.state.contract == undefined) {\r\n            setTimeout(() => {\r\n                const provider = new ethers.providers.Web3Provider(ethereum);\r\n                const signer = provider.getSigner();\r\n                const contract = new ethers.Contract(this.props.address, DeadMansContract.abi, signer);\r\n                this.setState({ contract: contract });\r\n                console.log(this.state.contract)\r\n                return contract;\r\n            });\r\n        } else {\r\n            console.log(this.state.contract)\r\n            return this.state.contract;\r\n        }\r\n    }\r\n\r\n    isActive = async () => {\r\n        try {\r\n            const tx = await this.initContract().isActive();\r\n\r\n            this.setState({ pendingTx: false, active: tx });\r\n        } catch (e) {\r\n            setTimeout(() => {\r\n                this.isActive();\r\n            }, 100);\r\n        }\r\n    };\r\n\r\n    tick = async () => {\r\n        try {\r\n            const tx = await this.initContract().tick();\r\n\r\n            this.setState({ pendingTx: true });\r\n\r\n            await tx.wait();\r\n            this.setState({ pendingTx: false })\r\n            this.getNextTimeStamp();\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    getNextTimeStamp = async () => {\r\n        try {\r\n            const tx = await this.initContract().getNextTimeStamp();\r\n            this.setState({ pendingTx: false, nextTimeStamp: Date(parseInt(BigInt(tx))).toString() });\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    setUrl = async () => {\r\n        try {\r\n            const newUrl = document.getElementById(\"setUrl\").value;\r\n            const tx = await this.initContract().setUrl(newUrl);\r\n\r\n            this.setState({ pendingTx: true });\r\n            await tx.wait();\r\n            this.setState({ pendingTx: false });\r\n            // this.getUrl();\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    getUrl = async () => {\r\n        try {\r\n            const tx = await this.initContract().getUrl();\r\n            this.setState({ pendingTx: true });\r\n\r\n            this.setState({ pendingTx: false, url: tx });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    getDecryptionKey = async () => {\r\n        try {\r\n            const tx = await this.initContract().getDecryptionKey();\r\n\r\n            await tx.wait();\r\n            this.setState({ showDecryptionKeyText: true, decryptionKey: tx });\r\n        } catch (e) {\r\n            this.setState({ showDecryptionKeyText: true, decryptionKey: \"The switch has not been activated yet\" });\r\n        }\r\n    };\r\n\r\n    renounceOwnershipModal = () => {\r\n        this.setState({ isModalRenounceVisible: true });\r\n    }\r\n\r\n    renounceOwnership = async () => {\r\n        const tx = await this.initContract().renounceOwnership();\r\n\r\n        await tx.wait();\r\n        this.handleRenounceCancel();\r\n    };\r\n\r\n    handleRenounceCancel = () => {\r\n        this.setState({ isModalRenounceVisible: false });\r\n    };\r\n\r\n    defuse = async () => {\r\n        const tx = await this.initContract().defuse();\r\n\r\n        await tx.wait();\r\n        this.handleDefuseCancel();\r\n    };\r\n\r\n    defuseModal = () => {\r\n        this.setState({ isModalDefuseVisible: true });\r\n    }\r\n\r\n    handleDefuseCancel = () => {\r\n        this.setState({ isModalDefuseVisible: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            this.isActive();\r\n            this.getUrl();\r\n            this.getNextTimeStamp();\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        // Add error message if user denies transactions\r\n        return (\r\n            <div>\r\n                {/* Give more emphasis to this */}\r\n                <Paragraph>Contract Address: {this.props.address}</Paragraph>\r\n                {this.state.pendingTx ? <Spin indicator={antIcon} style={{ width: \"100%\", marginTop: \"4rem\" }} /> : (\r\n                    <Space direction=\"vertical\">\r\n\r\n                        <Paragraph>The switch is {this.state.active === true ? \"still \" : \"not \"} being monitored.</Paragraph>\r\n                        <Paragraph>Next timestamp: {this.state.nextTimeStamp}</Paragraph>\r\n                        <Paragraph>Url to file: {this.state.url === \"\" ? \"There was no URL set or was left blank\" : this.state.url}</Paragraph>\r\n\r\n                        <Button onClick={this.tick}>Add Time</Button>\r\n                        <Button onClick={this.defuse}>Defuse</Button>\r\n                        <Button onClick={this.renounceOwnershipModal}>Renounce Ownership</Button>\r\n\r\n                        <Button onClick={this.setUrl}>Set Url</Button>\r\n                        <Input size=\"large\" id=\"setUrl\" />\r\n\r\n                        <Button onClick={this.getDecryptionKey}>Reveal Decryption Key</Button>\r\n                        {this.state.showDecryptionKeyText && <Paragraph>{this.state.decryptionKey}</Paragraph>}\r\n                    </Space>\r\n                )}\r\n\r\n                <Modal id=\"renounce\" title=\"Are you sure?\" visible={this.state.isModalRenounceVisible}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.handleRenounceCancel}>Cancel</Button>,\r\n                        <Button key=\"submit\" onClick={this.renounceOwnership}>Renounce Ownership</Button>\r\n                    ]}>\r\n                    <Paragraph>Renouncing the ownership of the Dead Man's Switch means that if not defused, there is no stopping the switch from activating.</Paragraph>\r\n                    <Paragraph>This action is is irreversible.</Paragraph>\r\n                </Modal>\r\n\r\n                <Modal id=\"defuse\" title=\"Are you sure?\" visible={this.state.isModalDefuseVisible}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.defuse} >Cancel</Button>,\r\n                        <Button key=\"submit\" onClick={this.handleDefuseCancel}>Defuse</Button>\r\n                    ]}>\r\n                    <Paragraph>Defusing the Dead Man's Switch means that the danger has passed and the use of the switch is no longer needed. The decryption key\r\n                        will not be revealed and you will no longer need to check on the switch.</Paragraph>\r\n                    <Paragraph>This action is is irreversible.</Paragraph>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n// 0) Refactor this page a little with those buttons\r\n// ) Check on deployed Contract functionality\r\n// 1) Dark screen mode\r\n// 2) Add routing to show the contract on a different page\r\n// 3) Host on IPFS\r\n\r\nexport default ContractInteraction;"]},"metadata":{},"sourceType":"module"}