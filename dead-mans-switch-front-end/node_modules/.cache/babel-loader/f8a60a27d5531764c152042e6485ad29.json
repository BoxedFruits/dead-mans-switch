{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\ETH Projects\\\\dead-mans-switch\\\\dead-mans-switch-front-end\\\\src\\\\components\\\\contractInteraction.jsx\";\nimport { Button, Space } from 'antd';\nimport React, { useState } from 'react';\nimport DeadMansContract from '../utils/DeadMansContract.abi.json';\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContractInteraction extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.initContract = () => {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(this.props.address, DeadMansContract.abi, signer);\n      return contract;\n    };\n\n    this.isActive = async () => {\n      const tx = await this.initContract().isActive();\n      console.log(tx);\n    };\n\n    this.tick = async () => {\n      const tx = await this.initContract().tick(); // Give user feedback that this was succesful\n    };\n\n    this.getDecryptionKey = async () => {\n      const tx = await this.initContract().getDecryptionKey(); // Well error if  block timestamp < nextTimestamp\n    };\n\n    this.setUrl = async newUrl => {\n      const tx = await this.initContract().setUrl(newUrl); // give user feedback\n    };\n\n    this.getUrl = async () => {\n      const tx = await this.initContract().getUrl();\n    };\n\n    this.defuse = async () => {\n      const tx = await this.initContract().defuse(); // Show gif?\n    };\n\n    this.renounceOwnership = async () => {\n      // Pop warning before allowing this to happpen\n      const tx = await this.initContract().renounceOwnership();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Contract Address \", this.props.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        direction: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.isActive,\n          children: \"Check Heartbeat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: tick,\n          children: \"Add Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: defuse,\n          children: \"Defuse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: renounceOwnership,\n          children: \"Renounce Ownership\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: getUrl,\n          children: \"Get URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: setUrl,\n          children: \"Set Url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: getDecryptionKey,\n          children: \"Reveal Decryption Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContractInteraction;","map":{"version":3,"sources":["C:/Users/samba/Desktop/ETH Projects/dead-mans-switch/dead-mans-switch-front-end/src/components/contractInteraction.jsx"],"names":["Button","Space","React","useState","DeadMansContract","ethers","ContractInteraction","Component","initContract","provider","providers","Web3Provider","ethereum","signer","getSigner","contract","Contract","props","address","abi","isActive","tx","console","log","tick","getDecryptionKey","setUrl","newUrl","getUrl","defuse","renounceOwnership","render"],"mappings":"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","sourcesContent":["import { Button, Space } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport DeadMansContract from '../utils/DeadMansContract.abi.json';\r\nimport { ethers } from \"ethers\";\r\n\r\nclass ContractInteraction extends React.Component {\r\n\r\n    initContract = () => {\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        const signer = provider.getSigner();\r\n        const contract = new ethers.Contract(this.props.address, DeadMansContract.abi, signer);\r\n        return contract;\r\n    }\r\n\r\n    isActive = async () => {\r\n        const tx = await this.initContract().isActive();\r\n        console.log(tx);\r\n    };\r\n\r\n    tick = async () => {\r\n        const tx = await this.initContract().tick();\r\n        // Give user feedback that this was succesful\r\n    };\r\n\r\n    getDecryptionKey = async () => {\r\n        const tx = await this.initContract().getDecryptionKey();\r\n        // Well error if  block timestamp < nextTimestamp\r\n    };\r\n\r\n    setUrl = async (newUrl) => {\r\n        const tx = await this.initContract().setUrl(newUrl);\r\n        // give user feedback\r\n    };\r\n\r\n    getUrl = async () => {\r\n        const tx = await this.initContract().getUrl();\r\n    };\r\n\r\n    defuse = async () => {\r\n        const tx = await this.initContract().defuse();\r\n        // Show gif?\r\n    };\r\n\r\n    renounceOwnership = async () => {\r\n        // Pop warning before allowing this to happpen\r\n        const tx = await this.initContract().renounceOwnership();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>Contract Address {this.props.address}</div>\r\n                <Space direction=\"vertical\">\r\n                    {/* None of the methods have inputs so they can just be buttons */}\r\n                    {/* Add icons to make them more interesting */}\r\n                    <Button onClick={this.isActive}>Check Heartbeat</Button>\r\n                    <Button onClick={tick}>Add Time</Button>\r\n                    <Button onClick={defuse}>Defuse</Button>\r\n                    <Button onClick={renounceOwnership}>Renounce Ownership</Button>\r\n                    <Button onClick={getUrl}>Get URL</Button>\r\n                    {/* Get input */}\r\n                    <Button onClick={setUrl}>Set Url</Button>\r\n                    <Button onClick={getDecryptionKey}>Reveal Decryption Key</Button>\r\n                </Space>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default ContractInteraction;"]},"metadata":{},"sourceType":"module"}