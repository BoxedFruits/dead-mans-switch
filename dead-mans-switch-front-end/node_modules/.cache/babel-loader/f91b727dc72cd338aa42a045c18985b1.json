{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\ETH Projects\\\\dead-mans-switch\\\\dead-mans-switch-front-end\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport DeadMansContract from './utils/DeadMansContract.abi.json';\nimport { ethers, ContractFactory } from \"ethers\";\nimport { useState } from 'react';\nimport { Layout, Collapse, Row, Col } from 'antd';\nimport \"antd/dist/antd.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Content,\n  Footer\n} = Layout;\nconst {\n  Panel\n} = Collapse;\n\nfunction App() {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        alert(\"This app only works with MetaMask for now!\");\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const createContract = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const decryptionKey = document.getElementById(\"decryptionKey\").value;\n        const cadence = document.getElementById(\"cadence\").value;\n        const factory = new ContractFactory(DeadMansContract.abi, DeadMansContract.bytecode, signer);\n        const contract = await factory.deploy(decryptionKey, cadence);\n        await contract.deployTransaction.wait(); // console.log(contract.address);\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 18,\n          children: [!currentAccount ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"waveButton\",\n            onClick: connectWallet,\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Currently connected as: \", currentAccount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            children: [/*#__PURE__*/_jsxDEV(Panel, {\n              header: \"What is a Dead Man's Switch?\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Lorem Ipsum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Panel, {\n              header: \"Why is the blockchain perfect for this?\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Lorem Ipsum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 69\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Panel, {\n              header: \"How this works\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Lorem Ipsum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"decryptionKey\",\n              placeholder: \"Decryption Key\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"cadence\",\n              placeholder: \"When to check in hours\",\n              max: \"168\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: createContract,\n              children: \"Create Dead Man's Switch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hO+PRUreH9DSyy9FjpWYmXii118=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/samba/Desktop/ETH Projects/dead-mans-switch/dead-mans-switch-front-end/src/App.js"],"names":["DeadMansContract","ethers","ContractFactory","useState","Layout","Collapse","Row","Col","Content","Footer","Panel","App","currentAccount","setCurrentAccount","connectWallet","ethereum","window","alert","accounts","request","method","console","log","error","createContract","provider","providers","Web3Provider","signer","getSigner","decryptionKey","document","getElementById","value","cadence","factory","abi","bytecode","contract","deploy","deployTransaction","wait"],"mappings":"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","sourcesContent":["import './App.css';\nimport DeadMansContract from './utils/DeadMansContract.abi.json';\nimport { ethers, ContractFactory } from \"ethers\";\nimport { useState } from 'react';\n\nimport { Layout, Collapse, Row, Col } from 'antd';\nimport \"antd/dist/antd.css\";\n\nconst { Content, Footer } = Layout;\nconst { Panel } = Collapse;\n\nfunction App() {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        alert(\"This app only works with MetaMask for now!\");\n        return;\n      }\n\n      const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const createContract = async () => {\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum)\n        const signer = provider.getSigner();\n        const decryptionKey = document.getElementById(\"decryptionKey\").value;\n        const cadence = document.getElementById(\"cadence\").value;\n\n        const factory = new ContractFactory(DeadMansContract.abi, DeadMansContract.bytecode, signer);\n\n        const contract = await factory.deploy(decryptionKey, cadence);\n\n        await contract.deployTransaction.wait();\n\n        // console.log(contract.address);\n      } else {\n        console.log(\"Ethereum object doesn't exist!\")\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <Layout>\n      <Content>\n        <Row justify=\"center\">\n          <Col span={18}>\n            {!currentAccount ? (\n              <button className=\"waveButton\" onClick={connectWallet}>\n                Connect Wallet\n              </button>\n            ) : <h1>Currently connected as: {currentAccount}</h1>\n            }\n            <Collapse>\n            <Panel header=\"What is a Dead Man's Switch?\"><p>Lorem Ipsum</p></Panel>\n            <Panel header=\"Why is the blockchain perfect for this?\"><p>Lorem Ipsum</p></Panel>\n            <Panel header=\"How this works\"><p>Lorem Ipsum</p></Panel>\n</Collapse>\n            <div>\n              <input id=\"decryptionKey\" placeholder=\"Decryption Key\"></input>\n              <input id=\"cadence\" placeholder=\"When to check in hours\" max=\"168\"></input>\n              <button onClick={createContract}>Create Dead Man's Switch</button>\n            </div>\n          </Col>\n\n          {/* User checks in on their DMS */}\n          {/* <form>\n        <input placeholder=\"Address of contract\"></input>\n        <button onClick=\"getContract\">{}</button>\n      </form> */}\n        </Row>\n      </Content>\n      <Footer></Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}