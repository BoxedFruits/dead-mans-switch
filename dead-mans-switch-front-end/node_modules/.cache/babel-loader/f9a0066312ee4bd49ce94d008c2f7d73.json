{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samba\\\\Desktop\\\\ETH Projects\\\\dead-mans-switch\\\\dead-mans-switch-front-end\\\\src\\\\components\\\\contractInteraction.jsx\";\nimport { Modal, Button, Space, Input, Spin } from 'antd';\nimport React from 'react';\nimport DeadMansContract from '../utils/DeadMansContract.abi.json';\nimport { ethers } from \"ethers\";\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst antIcon = /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n  style: {\n    fontSize: 92,\n    width: 100\n  },\n  spin: true\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 17\n}, this);\n\nclass ContractInteraction extends React.Component {\n  constructor() {\n    super();\n\n    this.initContract = () => {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(this.props.address, DeadMansContract.abi, signer);\n      return contract;\n    };\n\n    this.isActive = async () => {\n      try {\n        const tx = await this.initContract().isActive();\n        this.setState({\n          pendingTx: false,\n          showIsActiveText: true,\n          active: tx\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.tick = async () => {\n      try {\n        const tx = await this.initContract().tick();\n        this.setState({\n          pendingTx: true\n        });\n        await tx.wait();\n        this.setState({\n          pendingTx: false\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.getNextTimeStamp = async () => {\n      try {\n        const tx = await this.initContract().getNextTimeStamp();\n        this.setState({\n          pendingTx: false,\n          showNextTimeStamp: true,\n          nextTimeStamp: Date(parseInt(BigInt(tx))).toString()\n        });\n      } catch (e) {}\n    };\n\n    this.setUrl = async () => {\n      try {\n        const newUrl = document.getElementById(\"setUrl\").value;\n        const tx = await this.initContract().setUrl(newUrl);\n        this.setState({\n          pendingTx: true\n        });\n        await tx.wait();\n        this.setState({\n          pendingTx: false\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.getUrl = async () => {\n      try {\n        const tx = await this.initContract().getUrl();\n        this.setState({\n          pendingTx: true\n        });\n        this.setState({\n          pendingTx: false,\n          showGetUrlText: true,\n          url: tx\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.getDecryptionKey = async () => {\n      try {\n        const tx = await this.initContract().getDecryptionKey();\n        await tx.wait();\n        this.setState({\n          showDecryptionKeyText: true,\n          decryptionKey: tx\n        });\n      } catch (e) {\n        this.setState({\n          showDecryptionKeyText: true,\n          decryptionKey: \"The switch has not been activated yet\"\n        });\n      }\n    };\n\n    this.renounceOwnershipModal = () => {\n      this.setState({\n        isModalRenounceVisible: true\n      });\n    };\n\n    this.renounceOwnership = async () => {\n      const tx = await this.initContract().renounceOwnership();\n      await tx.wait();\n      this.handleRenounceCancel();\n    };\n\n    this.handleRenounceCancel = () => {\n      this.setState({\n        isModalRenounceVisible: false\n      });\n    };\n\n    this.defuse = async () => {\n      const tx = await this.initContract().defuse();\n      await tx.wait();\n      this.handleDefuseCancel();\n    };\n\n    this.defuseModal = () => {\n      this.setState({\n        isModalDefuseVisible: true\n      });\n    };\n\n    this.handleDefuseCancel = () => {\n      this.setState({\n        isModalDefuseVisible: false\n      });\n    };\n\n    this.state = {\n      active: false,\n      url: \"\",\n      decryptionKey: \"\",\n      nextTimeStamp: \"\",\n      pendingTx: false,\n      showIsActiveText: false,\n      showTickText: false,\n      showRenounceText: false,\n      showGetDecryptionText: false,\n      showDefuseText: false,\n      showGetUrlText: false,\n      showSetUrlText: false,\n      showNextTimeStamp: false,\n      isModalRenounceVisible: false,\n      isModalDefuseVisible: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Contract Address: \", this.props.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), this.state.pendingTx ? /*#__PURE__*/_jsxDEV(Spin, {\n        indicator: antIcon,\n        style: {\n          width: \"100%\",\n          marginTop: \"4rem\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(Space, {\n        direction: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.isActive,\n          children: \"Check Heartbeat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), this.state.showIsActiveText && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The switch is \", this.state.active ? \"still \" : \"not \", \" being monitored.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 57\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.getNextTimeStamp,\n          children: \"Get Next Time Stamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), this.state.showNextTimeStamp && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.nextTimeStamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 58\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.getUrl,\n          children: \"Get URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this), this.state.showGetUrlText && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.url === \"\" ? \"There was no URL set or was left blank\" : this.state.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.tick,\n          children: \"Add Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.defuse,\n          children: \"Defuse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.renounceOwnershipModal,\n          children: \"Renounce Ownership\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.setUrl,\n          children: \"Set Url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          size: \"large\",\n          id: \"setUrl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.getDecryptionKey,\n          children: \"Reveal Decryption Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), this.state.showDecryptionKeyText && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.decryptionKey === \"The switch has not been activated yet\" ? \"\" : this.state.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        id: \"renounce\",\n        title: \"Are you sure?\",\n        visible: this.state.isModalRenounceVisible,\n        footer: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleRenounceCancel,\n          children: \"Cancel\"\n        }, \"back\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.renounceOwnership,\n          children: \"Renounce Ownership\"\n        }, \"submit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)],\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Renouncing the ownership of the Dead Man's Switch means that if not defused, there is no stopping the switch from activating.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This action is is irreversible.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        id: \"defuse\",\n        title: \"Are you sure?\",\n        visible: this.state.isModalDefuseVisible,\n        footer: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.defuse,\n          children: \"Cancel\"\n        }, \"back\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleDefuseCancel,\n          children: \"Defuse\"\n        }, \"submit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)],\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Defusing the Dead Man's Switch means that the danger has passed and the use of the switch is no longer needed. The decryption key will not be revealed and you will no longer need to check on the switch.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This action is is irreversible.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContractInteraction;","map":{"version":3,"sources":["C:/Users/samba/Desktop/ETH Projects/dead-mans-switch/dead-mans-switch-front-end/src/components/contractInteraction.jsx"],"names":["Modal","Button","Space","Input","Spin","React","DeadMansContract","ethers","LoadingOutlined","antIcon","fontSize","width","ContractInteraction","Component","constructor","initContract","provider","providers","Web3Provider","ethereum","signer","getSigner","contract","Contract","props","address","abi","isActive","tx","setState","pendingTx","showIsActiveText","active","e","console","log","tick","wait","getNextTimeStamp","showNextTimeStamp","nextTimeStamp","Date","parseInt","BigInt","toString","setUrl","newUrl","document","getElementById","value","getUrl","showGetUrlText","url","getDecryptionKey","showDecryptionKeyText","decryptionKey","renounceOwnershipModal","isModalRenounceVisible","renounceOwnership","handleRenounceCancel","defuse","handleDefuseCancel","defuseModal","isModalDefuseVisible","state","showTickText","showRenounceText","showGetDecryptionText","showDefuseText","showSetUrlText","render","marginTop"],"mappings":"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","sourcesContent":["import { Modal, Button, Space, Input, Spin } from 'antd';\r\nimport React from 'react';\r\nimport DeadMansContract from '../utils/DeadMansContract.abi.json';\r\nimport { ethers } from \"ethers\";\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst antIcon = <LoadingOutlined style={{ fontSize: 92, width: 100 }} spin />;\r\n\r\nclass ContractInteraction extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            active: false,\r\n            url: \"\",\r\n            decryptionKey: \"\",\r\n            nextTimeStamp: \"\",\r\n            pendingTx: false,\r\n            showIsActiveText: false,\r\n            showTickText: false,\r\n            showRenounceText: false,\r\n            showGetDecryptionText: false,\r\n            showDefuseText: false,\r\n            showGetUrlText: false,\r\n            showSetUrlText: false,\r\n            showNextTimeStamp: false,\r\n            isModalRenounceVisible: false,\r\n            isModalDefuseVisible: false\r\n        };\r\n    }\r\n\r\n    initContract = () => {\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        const signer = provider.getSigner();\r\n        const contract = new ethers.Contract(this.props.address, DeadMansContract.abi, signer);\r\n        return contract;\r\n    }\r\n\r\n    isActive = async () => {\r\n        try {\r\n            const tx = await this.initContract().isActive();\r\n            this.setState({ pendingTx: false, showIsActiveText: true, active: tx });\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    };\r\n\r\n    tick = async () => {\r\n        try {\r\n            const tx = await this.initContract().tick();\r\n\r\n            this.setState({ pendingTx: true });\r\n\r\n            await tx.wait();\r\n            this.setState({ pendingTx: false });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    getNextTimeStamp = async () => {\r\n        try {\r\n            const tx = await this.initContract().getNextTimeStamp();\r\n            this.setState({ pendingTx: false, showNextTimeStamp: true, nextTimeStamp: Date(parseInt(BigInt(tx))).toString() });\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    setUrl = async () => {\r\n        try {\r\n            const newUrl = document.getElementById(\"setUrl\").value;\r\n            const tx = await this.initContract().setUrl(newUrl);\r\n\r\n            this.setState({ pendingTx: true });\r\n            await tx.wait();\r\n            this.setState({ pendingTx: false });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    getUrl = async () => {\r\n        try {\r\n            const tx = await this.initContract().getUrl();\r\n            this.setState({ pendingTx: true });\r\n\r\n            this.setState({ pendingTx: false, showGetUrlText: true, url: tx });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    getDecryptionKey = async () => {\r\n        try {\r\n            const tx = await this.initContract().getDecryptionKey();\r\n\r\n            await tx.wait();\r\n            this.setState({ showDecryptionKeyText:true, decryptionKey: tx });\r\n        } catch (e) {\r\n            this.setState({showDecryptionKeyText:true, decryptionKey: \"The switch has not been activated yet\" });\r\n        }\r\n    };\r\n\r\n\r\n\r\n    renounceOwnershipModal = () => {\r\n        this.setState({ isModalRenounceVisible: true });\r\n    }\r\n\r\n    renounceOwnership = async () => {\r\n        const tx = await this.initContract().renounceOwnership();\r\n\r\n        await tx.wait();\r\n        this.handleRenounceCancel();\r\n    };\r\n\r\n    handleRenounceCancel = () => {\r\n        this.setState({ isModalRenounceVisible: false });\r\n    };\r\n\r\n    defuse = async () => {\r\n        const tx = await this.initContract().defuse();\r\n\r\n        await tx.wait();\r\n        this.handleDefuseCancel();\r\n    };\r\n\r\n    defuseModal = () => {\r\n        this.setState({ isModalDefuseVisible: true });\r\n    }\r\n\r\n    handleDefuseCancel = () => {\r\n        this.setState({ isModalDefuseVisible: false });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* Give more emphasis to this */}\r\n                <div>Contract Address: {this.props.address}</div>\r\n                {this.state.pendingTx ? <Spin indicator={antIcon} style={{ width: \"100%\", marginTop: \"4rem\" }} /> : (\r\n                    <Space direction=\"vertical\">\r\n\r\n                        {/* Take these buttons out and put them at the top of the page instead. It is important information */}\r\n                        <Button onClick={this.isActive}>Check Heartbeat</Button>\r\n                        {this.state.showIsActiveText && <p>The switch is {this.state.active ? \"still \" : \"not \"} being monitored.</p>}\r\n                        <Button onClick={this.getNextTimeStamp}>Get Next Time Stamp</Button>\r\n                        {this.state.showNextTimeStamp && <p>{this.state.nextTimeStamp}</p>}\r\n                        <Button onClick={this.getUrl}>Get URL</Button>\r\n                        {this.state.showGetUrlText && <p>{this.state.url === \"\" ? \"There was no URL set or was left blank\" : this.state.url}</p>}\r\n\r\n                        <Button onClick={this.tick}>Add Time</Button>\r\n                        <Button onClick={this.defuse}>Defuse</Button>\r\n                        <Button onClick={this.renounceOwnershipModal}>Renounce Ownership</Button>\r\n\r\n                        <Button onClick={this.setUrl}>Set Url</Button>\r\n                        <Input size=\"large\" id=\"setUrl\" />\r\n\r\n                        <Button onClick={this.getDecryptionKey}>Reveal Decryption Key</Button>\r\n                        {this.state.showDecryptionKeyText && <p>{this.state.decryptionKey === \"The switch has not been activated yet\" ? \"\" : this.state.url}</p>}\r\n                    </Space>\r\n                )}\r\n\r\n                <Modal id=\"renounce\" title=\"Are you sure?\" visible={this.state.isModalRenounceVisible}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.handleRenounceCancel}>Cancel</Button>,\r\n                        <Button key=\"submit\" onClick={this.renounceOwnership}>Renounce Ownership</Button>\r\n                    ]}>\r\n                    <p>Renouncing the ownership of the Dead Man's Switch means that if not defused, there is no stopping the switch from activating.</p>\r\n                    <p>This action is is irreversible.</p>\r\n                </Modal>\r\n\r\n                <Modal id=\"defuse\" title=\"Are you sure?\" visible={this.state.isModalDefuseVisible}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={this.defuse} >Cancel</Button>,\r\n                        <Button key=\"submit\" onClick={this.handleDefuseCancel}>Defuse</Button>\r\n                    ]}>\r\n                    <p>Defusing the Dead Man's Switch means that the danger has passed and the use of the switch is no longer needed. The decryption key\r\n                        will not be revealed and you will no longer need to check on the switch.</p>\r\n                    <p>This action is is irreversible.</p>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default ContractInteraction;"]},"metadata":{},"sourceType":"module"}