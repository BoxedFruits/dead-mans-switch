{"code":"(this[\"webpackJsonpdead-mans-switch-front-end\"]=this[\"webpackJsonpdead-mans-switch-front-end\"]||[]).push([[77],{441:function(n,e,t){\"use strict\";function a(n){n.languages.lua={comment:/^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,string:{pattern:/([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,greedy:!0},number:/\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,keyword:/\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,function:/(?!\\d)\\w+(?=\\s*(?:[({]))/,operator:[/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,{pattern:/(^|[^.])\\.\\.(?!\\.)/,lookbehind:!0}],punctuation:/[\\[\\](){},;]|\\.+|:+/}}n.exports=a,a.displayName=\"lua\",a.aliases=[]}}]);","name":"static/js/react-syntax-highlighter_languages_refractor_lua.575a93c2.chunk.js","map":{"version":3,"sources":["static/js/react-syntax-highlighter_languages_refractor_lua.575a93c2.chunk.js"],"names":["this","push","module","exports","__webpack_require__","lua","Prism","languages","comment","string","pattern","greedy","number","keyword","function","operator","lookbehind","punctuation","displayName","aliases"],"mappings":"CAACA,KAAK,0CAA4CA,KAAK,2CAA6C,IAAIC,KAAK,CAAC,CAAC,IAAI,CAE7G,IACA,SAAUC,EAAQC,EAASC,GAEjC,aAOA,SAASC,EAAIC,GACXA,EAAMC,UAAUF,IAAM,CACpBG,QAAS,yCAETC,OAAQ,CACNC,QAAS,uFACTC,QAAQ,GAEVC,OAAQ,wGACRC,QAAS,0HACTC,SAAU,2BACVC,SAAU,CAAC,wCAAyC,CAElDL,QAAS,qBACTM,YAAY,IAEdC,YAAa,uBApBjBf,EAAOC,QAAUE,EACjBA,EAAIa,YAAc,MAClBb,EAAIc,QAAU"},"input":"(this[\"webpackJsonpdead-mans-switch-front-end\"] = this[\"webpackJsonpdead-mans-switch-front-end\"] || []).push([[77],{\n\n/***/ 441:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = lua;\nlua.displayName = 'lua';\nlua.aliases = [];\n\nfunction lua(Prism) {\n  Prism.languages.lua = {\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n    // \\z may be used to skip the following space\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n      greedy: true\n    },\n    number: /\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n    keyword: /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n    operator: [/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/, {\n      // Match \"..\" but don't break \"...\"\n      pattern: /(^|[^.])\\.\\.(?!\\.)/,\n      lookbehind: true\n    }],\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\n  };\n}\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/samba/Desktop/ETH Projects/dead-mans-switch/dead-mans-switch-front-end/node_modules/refractor/lang/lua.js"],"names":["module","exports","lua","displayName","aliases","Prism","languages","comment","string","pattern","greedy","number","keyword","function","operator","lookbehind","punctuation"],"mappings":";;;;;;AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,EAAd;;AACA,SAASF,GAAT,CAAaG,KAAb,EAAoB;AAClBA,OAAK,CAACC,SAAN,CAAgBJ,GAAhB,GAAsB;AACpBK,WAAO,EAAE,wCADW;AAEpB;AACAC,UAAM,EAAE;AACNC,aAAO,EAAE,sFADH;AAENC,YAAM,EAAE;AAFF,KAHY;AAOpBC,UAAM,EAAE,uGAPY;AAQpBC,WAAO,EAAE,yHARW;AASpBC,YAAQ,EAAE,0BATU;AAUpBC,YAAQ,EAAE,CACR,uCADQ,EAER;AACE;AACAL,aAAO,EAAE,oBAFX;AAGEM,gBAAU,EAAE;AAHd,KAFQ,CAVU;AAkBpBC,eAAW,EAAE;AAlBO,GAAtB;AAoBD,C","file":"x","sourcesContent":["'use strict'\n\nmodule.exports = lua\nlua.displayName = 'lua'\nlua.aliases = []\nfunction lua(Prism) {\n  Prism.languages.lua = {\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n    // \\z may be used to skip the following space\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n      greedy: true\n    },\n    number: /\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n    keyword: /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n    operator: [\n      /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n      {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\n  }\n}\n"]}}